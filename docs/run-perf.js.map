{"version":3,"file":"run-perf.js","sources":["../src/components/run-perf-range/run-perf-range.js","../src/components/run-perf/run-perf.js"],"sourcesContent":["import { h, customElement } from \"atomico\";\nimport style from \"./run-perf-range.css\";\n\nfunction RunPerfRange({ percent, color }) {\n  return (\n    <host shadowDom>\n      <style>{style}</style>\n      <div class=\"layer -z1\"></div>\n      <div\n        class=\"layer -z2\"\n        style={`width:${\n          percent * 100\n        }%;background: linear-gradient(to right, ${color}50, ${color});`}\n      >\n        <svg class=\"dot\" height=\"300%\" viewBox=\"0 0 100 100\">\n          <circle cx=\"50\" cy=\"50\" r=\"50\" fill={color} />\n        </svg>\n      </div>\n    </host>\n  );\n}\n\nRunPerfRange.props = {\n  percent: {\n    type: Number,\n    value: 50,\n    reflect: true,\n  },\n  color: {\n    type: String,\n    value: \"#000000\",\n  },\n};\n\ncustomElement(\"run-perf-range\", RunPerfRange);\n","import { h, customElement, useEffect, useRef, useProp, useHost } from \"atomico\";\nimport style from \"./run-perf.css\";\nimport \"../run-perf-range/run-perf-range\";\n\nfunction RunPerf({ src, autorun }) {\n  let ref = useRef();\n  let [state, setState] = useProp(\"state\");\n  let [results, setResults] = useProp(\"results\");\n  useEffect(() => autorun && run(), [autorun]);\n  useMethod(\"run\", run);\n\n  function run() {\n    let {\n      current: { contentDocument, contentWindow },\n    } = ref;\n\n    let setStep = (step) => (fn) => (steps[step] = fn);\n\n    let steps = { test: [] };\n    let states = [];\n\n    contentWindow.before = setStep(\"before\");\n\n    contentWindow.test = (name, test, before) =>\n      states.push({ name, test, before });\n\n    contentWindow.after = setStep(\"after\");\n\n    contentWindow.ready = async () => {\n      setResults(states);\n      setState(\"running\");\n\n      let globalScope = await (steps.before && steps.before());\n\n      let prepare = () =>\n        new Promise((resolve) => contentWindow.requestIdleCallback(resolve));\n\n      await states.reduce(\n        (currentPromise, { test, before }) =>\n          currentPromise.then(async () => {\n            await prepare();\n\n            let localScope = before ? await before() : globalScope;\n\n            let operations = loop(test, 1000, localScope);\n\n            setResults(\n              (states = states.map((state) =>\n                state.test == test ? { ...state, operations } : state\n              ))\n            );\n          }),\n        prepare()\n      );\n\n      setState(\"done\");\n\n      steps.after && steps.after(states);\n    };\n\n    if (!ref[src]) {\n      ref[src] = true;\n\n      let script = document.createElement(\"script\");\n\n      script.async = true;\n\n      script.textContent = `import(\"./${src}\").then(ready);`;\n\n      contentDocument.body.appendChild(script);\n    } else {\n      state == \"done\" && ready();\n    }\n  }\n\n  let listOperation = results.map((result) => result.operations || 0);\n  let maxOperation = Math.max(0, ...listOperation);\n  let minOperation = Math.min(...listOperation);\n  let rangeOperation = maxOperation - minOperation;\n  let rangeOperation30 = rangeOperation * 0.3 + minOperation;\n  let rangeOperation60 = rangeOperation * 0.6 + minOperation;\n\n  return (\n    <host shadowDom>\n      <style>{style}</style>\n      <div class=\"tests\">\n        {results.map(({ name, operations = 0, duration = 0 }) => {\n          return (\n            <div class=\"test -item\">\n              <div class=\"test -header\">\n                <div class=\"test -title\">{name}</div>\n                <div class=\"test -time\">\n                  {operations\n                    ? operations.toLocaleString(\"en\") + \" opts/s\"\n                    : \"await...\"}\n                </div>\n              </div>\n              <run-perf-range\n                color={\n                  operations > rangeOperation60\n                    ? \"#00FFD4\"\n                    : operations > rangeOperation30\n                    ? \"#ffbe46\"\n                    : \"#ff1a84\"\n                }\n                percent={operations / maxOperation || 0}\n              ></run-perf-range>\n            </div>\n          );\n        })}\n      </div>\n      <iframe\n        class=\"iframe\"\n        ref={ref}\n        width=\"0\"\n        height=\"0\"\n        sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms allow-top-navigation\"\n        frameborder=\"0\"\n      ></iframe>\n    </host>\n  );\n}\n\nfunction useMethod(name, callback) {\n  let { current } = useHost();\n  if (!current[name]) {\n    let method = (...args) => method._(...args);\n  }\n  current._ = callback;\n  return current[name];\n}\n\nfunction loop(callback, ms, scope) {\n  let start = performance.now();\n  let count = 0;\n  while (performance.now() - start < ms) {\n    count++;\n    callback(scope);\n  }\n  return count;\n}\n\nRunPerf.props = {\n  src: { type: String },\n  autorun: { type: Boolean },\n  results: { type: Array, value: () => [] },\n  state: {\n    type: String,\n    reflect: true,\n    value: \"\",\n    event: { type: \"UpdateState\" },\n  },\n};\n\ncustomElement(\"run-perf\", RunPerf);\n"],"names":["RunPerfRange","percent","color","h","style","props","type","Number","value","reflect","String","customElement","RunPerf","src","autorun","ref","useRef","state","setState","useProp","results","setResults","useEffect","run","useMethod","current","contentDocument","contentWindow","setStep","step","fn","steps","test","states","before","name","push","after","ready","globalScope","prepare","Promise","resolve","requestIdleCallback","reduce","currentPromise","then","localScope","operations","loop","map","script","document","createElement","async","textContent","body","appendChild","listOperation","result","maxOperation","Math","max","minOperation","min","rangeOperation","rangeOperation30","rangeOperation60","duration","toLocaleString","callback","useHost","_","ms","scope","start","performance","now","count","Boolean","Array","event"],"mappings":"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"}