{"version":3,"file":"run-perf.js","sources":["../src/components/run-perf-range/run-perf-range.js","../src/components/run-perf/run-perf.js"],"sourcesContent":["import { h, customElement } from \"atomico\";\nimport style from \"./run-perf-range.css\";\n\nfunction RunPerfRange({ percent, color }) {\n  return (\n    <host shadowDom>\n      <style>{style}</style>\n      <div class=\"layer -z1\"></div>\n      <div\n        class=\"layer -z2\"\n        style={`width:${\n          percent * 100\n        }%;background: linear-gradient(to right, ${color}50, ${color});`}\n      >\n        <svg class=\"dot\" height=\"300%\" viewBox=\"0 0 100 100\">\n          <circle cx=\"50\" cy=\"50\" r=\"50\" fill={color} />\n        </svg>\n      </div>\n    </host>\n  );\n}\n\nRunPerfRange.props = {\n  percent: {\n    type: Number,\n    value: 50,\n    reflect: true,\n  },\n  color: {\n    type: String,\n    value: \"#000000\",\n  },\n};\n\ncustomElement(\"run-perf-range\", RunPerfRange);\n","import { h, customElement, useEffect, useRef, useProp, useHost } from \"atomico\";\nimport style from \"./run-perf.css\";\nimport \"../run-perf-range/run-perf-range\";\n\nfunction RunPerf({ src, autorun }) {\n  let ref = useRef();\n  let [state, setState] = useProp(\"state\");\n  let [results, setResults] = useProp(\"results\");\n  useEffect(() => autorun && run(), [autorun]);\n  useMethod(\"run\", run);\n\n  function run() {\n    let {\n      current: { contentDocument, contentWindow },\n    } = ref;\n\n    let setStep = (step) => (fn) => (steps[step] = fn);\n\n    let steps = { test: [] };\n    let states = [];\n\n    contentWindow.before = setStep(\"before\");\n\n    contentWindow.test = (name, test, before) =>\n      states.push({ name, test, before });\n\n    contentWindow.after = setStep(\"after\");\n\n    contentWindow.ready = async () => {\n      setResults(states);\n      setState(\"running\");\n\n      let globalScope = await (steps.before && steps.before());\n\n      let prepare = () =>\n        new Promise((resolve) => contentWindow.requestIdleCallback(resolve));\n\n      await states.reduce(\n        (currentPromise, { test, before }) =>\n          currentPromise.then(async () => {\n            await prepare();\n\n            let localScope = before ? await before() : globalScope;\n\n            let operations = loop(test, 1000, localScope);\n\n            setResults(\n              (states = states.map((state) =>\n                state.test == test ? { ...state, operations } : state\n              ))\n            );\n          }),\n        prepare()\n      );\n\n      setState(\"done\");\n\n      steps.after && steps.after(states);\n    };\n\n    if (!ref[src]) {\n      ref[src] = true;\n\n      let script = document.createElement(\"script\");\n\n      script.async = true;\n\n      script.textContent = `import(\"./${src}\").then(ready);`;\n\n      contentDocument.body.appendChild(script);\n    } else {\n      state == \"done\" && ready();\n    }\n  }\n\n  let listOperation = results.map((result) => result.operations || 0);\n  let maxOperation = Math.max(0, ...listOperation);\n  let minOperation = Math.min(...listOperation);\n  let rangeOperation = maxOperation - minOperation;\n  let rangeOperation30 = rangeOperation * 0.3 + minOperation;\n  let rangeOperation60 = rangeOperation * 0.6 + minOperation;\n\n  return (\n    <host shadowDom>\n      <style>{style}</style>\n      <div class=\"tests\">\n        {results.map(({ name, operations = 0, duration = 0 }) => {\n          return (\n            <div class=\"test -item\">\n              <div class=\"test -header\">\n                <div class=\"test -title\">{name}</div>\n                <div class=\"test -time\">\n                  {operations\n                    ? operations.toLocaleString(\"en\") + \" opts/s\"\n                    : \"await...\"}\n                </div>\n              </div>\n              <run-perf-range\n                color={\n                  operations > rangeOperation60\n                    ? \"#00FFD4\"\n                    : operations > rangeOperation30\n                    ? \"#ffbe46\"\n                    : \"#ff1a84\"\n                }\n                percent={operations / maxOperation || 0}\n              ></run-perf-range>\n            </div>\n          );\n        })}\n      </div>\n      <iframe\n        class=\"iframe\"\n        ref={ref}\n        width=\"0\"\n        height=\"0\"\n        sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms allow-top-navigation\"\n        frameborder=\"0\"\n      ></iframe>\n    </host>\n  );\n}\n\nfunction useMethod(name, callback) {\n  let { current } = useHost();\n  if (!current[name]) {\n    let method = (...args) => method._(...args);\n  }\n  current._ = callback;\n  return current[name];\n}\n\nfunction loop(callback, ms, scope) {\n  let start = performance.now();\n  let count = 0;\n  while (performance.now() - start < ms) {\n    count++;\n    callback(scope);\n  }\n  return count;\n}\n\nRunPerf.props = {\n  src: { type: String },\n  autorun: { type: Boolean },\n  results: { type: Array, value: () => [] },\n  state: {\n    type: String,\n    reflect: true,\n    value: \"\",\n    event: { type: \"UpdateState\" },\n  },\n};\n\ncustomElement(\"run-perf\", RunPerf);\n"],"names":["RunPerfRange","percent","color","h","shadowDom","class","style","height","viewBox","cx","cy","r","fill","RunPerf","src","autorun","ref","useRef","state","setState","useProp","results","setResults","run","current","contentDocument","contentWindow","setStep","step","fn","steps","test","states","before","name","push","after","ready","async","globalScope","prepare","Promise","resolve","requestIdleCallback","reduce","currentPromise","then","localScope","operations","callback","ms","scope","start","performance","now","count","loop","map","script","document","createElement","textContent","body","appendChild","useEffect","useHost","_","useMethod","listOperation","result","maxOperation","Math","max","minOperation","min","rangeOperation","rangeOperation30","rangeOperation60","duration","toLocaleString","width","sandbox","frameborder","props","type","Number","value","reflect","String","customElement","Boolean","Array","event"],"mappings":"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"}